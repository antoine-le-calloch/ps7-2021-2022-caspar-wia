name: Back-end CI
# Path: .github/workflows/front.yml
# Deploy to production as a .jar file and run as a service

on:
  push:
    branches: [ master, dev ]
defaults:
  run:
    working-directory: back

jobs:
  compile-api:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Compile with Maven
        run: mvn compile -Pprod -DskipTests

    outputs:
      job_status: ${{ job.status }}

  test-api:
    runs-on: ubuntu-latest
    needs: [ compile-api ]
    continue-on-error: true

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Test with Maven
        run: mvn test -e -X -Pdev

  lint-api:
    runs-on: ubuntu-latest
    needs: [ compile-api, test-api, test-api ]
    continue-on-error: true

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run SonarQube Analysis
        run: mvn clean verify -Psonar sonar:sonar -Dsonar.pitest.mode=reuseReport -Dsonar.login=${{secrets.SQ_TOKEN}}

  deploy-api:
    runs-on: ubuntu-latest
    needs: [ lint-api, compile-api, test-api ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and package with Maven
        run: mvn clean package -Pprod -DskipTests

      - name: Upload application
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP_ADDRESS }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 55552
          source: "/home/runner/work/ps7-21-22-caspar-wia2-21-22/ps7-21-22-caspar-wia2-21-22/back/target/polyfrontier-api-beta.jar"
          target: "/home/admin/source"

      - name: Start Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP_ADDRESS }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 55552
          script: |
            echo ${{ secrets.SERVER_PASSWD }} | sudo -S service polyfrontier-api stop
            mv ~/source/polyfrontier-api.jar ~/source/polyfrontier-api-old.jar
            mv ~/source/github/workspace/back/target/polyfrontier-api-beta.jar ~/source/polyfrontier-api.jar
            echo ${{ secrets.SERVER_PASSWD }} | sudo -S service polyfrontier-api start
            rm ~/source/polyfrontier-api-old.jar
